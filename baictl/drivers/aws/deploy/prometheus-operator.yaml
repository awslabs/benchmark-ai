adminUser: admin
# This will always fall back to 'prom-operator'. TODO: Find a way how to make this use a randomly generated password
# kubectl get secret prometheus-operator-1-grafana -o yaml
adminPassword:

# Use an existing secret for the admin user.
admin:
  existingSecret: ""
  userKey: admin-user
  passwordKey: admin-password

# I'd recommend disabling password-based (admin) access and instead use OAuth
# https://grafana.com/docs/installation/configuration/#auth

grafana:
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/load-balancer-source-ranges: @@PREFIX_LIST_CIDR_BLOCKS@@

prometheus:
  prometheusSpec:
    additionalScrapeConfigs:
      - job_name: gpu_metrics
        honor_timestamps: true
        scrape_interval: 1s
        scrape_timeout: 800ms
        metrics_path: /gpu/metrics
        scheme: http
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - default
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: pod-gpu-metrics-exporter
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: ${1}:9400
            target_label: __address__
      - job_name: bai_kafka_metrics
        honor_timestamps: true
        scrape_interval: 5s
        scrape_timeout: 4s
        metrics_path: /metrics
        scheme: http
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - default
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_service]
            action: keep
            regex: prometheus-kafka-topic-exporter
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: ${1}:12340
            target_label: __address__