#!/usr/bin/env bash

conda_usage() {
    printf "

 baictl uses Conda to provide a predictable running environment.  Make
 sure you have Conda installed. We recommend installing miniconda via
 https://docs.conda.io/en/latest/miniconda.html

 Once Conda is installed run the following:

 %s --env-setup

 And then re-run the ${0##*/} command :-)

" "${0##*/}"
    exit 9
}

env_setup() {
    if ! conda --version; then conda_usage; fi;
    cmd="conda env update -f environment.yml"
    ${cmd}

    printf "
  Please proceed with your %s shenanigans

" "${0##*/}"
}

if [ $1 = "--env-setup" ]; then
    env_setup
    exit $?
fi

CONDA_EXE="${CONDA_EXE:=$(which conda)}"
if ! source "${CONDA_EXE%/*}"/activate baictl >& /dev/null; then
    printf "
  Oops, there seems to be a problem with Conda...
        (Do you have Conda installed? Is it in your \$PATH?)\n"
    conda_usage
fi

DEBUG=${DEBUG:-0}
VERBOSE=${VERBOSE:-0}

print_usage_and_exit(){
    printf "Usage: baictl [verb] [object] [options]\n"
    if [[ $verb == "--help" ]]; then
      exit 0
    else
      exit 1
    fi
}

all_args="$@"

verb=$1
object=$2

if ! [[ $verb =~ ^(create|destroy|port-forward|logs|list|run|schedule|delete|validate|show|sync)$ ]]
    then print_usage_and_exit
fi

if ! [[ $object =~ ^(infra|benchmarks?|pod|k8s-dashboard)$ ]]
    then print_usage_and_exit
fi

verbose=""
just_help=""
data_dir=${HOME}/bai

for arg in "$@"
do
    case "${arg}" in
    --target=*)
      target="${arg#*=}"
      ;;
    --data-dir=*)
      data_dir="${arg#*=}"
      ;;
    --verbose)
      verbose=1
      ;;
    --help)
        just_help="1"
  esac
done

saved_target=$data_dir/.target

if [ -f $saved_target ]; then
    target=$(<$saved_target)
fi

target="${target:=aws}"

dir=$(dirname "$(realpath ${BASH_SOURCE})")
backend=${dir}/drivers/${target}/baidriver

if [ -f "${backend}" ]; then
   ${backend} "$@" || print_usage_and_exit
else
   printf "Backend %s does not exist.\n" "$target"
   print_usage_and_exit
fi
