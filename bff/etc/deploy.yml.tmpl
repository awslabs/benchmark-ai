apiVersion: apps/v1
kind: Deployment
metadata:
  name: @@PROJECT@@
  labels:
    app: benchmark-ai
    service: @@PROJECT@@
spec:
  selector:
    matchLabels:
      app: benchmark-ai
      service: @@PROJECT@@
      env: @@ENVIRONMENT@@
  replicas: 3
  template:
    metadata:
      labels:
        app: benchmark-ai
        service: @@PROJECT@@
        env: @@ENVIRONMENT@@
        tag: @@TAG@@
      annotations:
        benchmark-ai.@@PROJECT@@.git-tag: "@@REPO_SITE@@ @@TAG@@"
        benchmark-ai.@@PROJECT@@.docker-tag: "@@DOCKER_REGISTRY@@ @@DOCKER_TAG@@"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: service
                    operator: In
                    values:
                      - @@PROJECT@@
              topologyKey: kubernetes.io/hostname
      containers:
        - name: @@PROJECT@@
          image: @@DOCKER_REGISTRY@@/@@PROJECT@@:@@DOCKER_TAG@@
          ports:
            - containerPort: @@SVC_PORT@@
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /lively
              port: @@SVC_PORT@@
            initialDelaySeconds: 240
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: @@SVC_PORT@@
            initialDelaySeconds: 240
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
          env:
            - name: ENVIRONMENT
              value: "@@ENVIRONMENT@@"
            - name: LOGGING_LEVEL
              value: "@@LOGGING_LEVEL@@"
            - name: ENDPOINTS_PORT
              value: "@@SVC_PORT@@"
            - name: THREAD_POOL_SIZE
              value: "@@THREAD_POOL_SIZE@@"
            - name: MAX_QUEUE_SIZE
              value: "@@MAX_QUEUE_SIZE@@"
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: outputs-infrastructure
                  key: msk_bootstrap_brokers
            - name: KAFKA_SOURCE_TOPIC
              value: "@@KAFKA_SOURCE_TOPIC@@"
            - name: KAFKA_CMD_RETURN_TOPIC
              value: "@@KAFKA_CMD_RETURN_TOPIC@@"
            - name: KAFKA_CONSUMER_GROUP_ID
              value: "@@KAFKA_CONSUMER_GROUP_ID@@"
            - name: KAFKA_POLL_INTERVAL_MS
              value: "@@KAFKA_POLL_INTERVAL_MS@@"
      nodeSelector:
        node.type: bai-services-cheap
      restartPolicy: Always
