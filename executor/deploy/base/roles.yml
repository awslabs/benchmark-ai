# Role for creating jobs
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-creator
  namespace: default
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "get"]
---
# Role for creating Services
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-creator
  namespace: default
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "get"]
---
# Role for creating ConfigMaps
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: configmap-creator
  namespace: default
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "get"]
---
# Role for executing MPIJobs
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mpijob-creator
rules:
- apiGroups: ["","batch", "kubeflow.org","rbac.authorization.k8s.io"]
  resources: ["mpijobs","rolebindings"]
  verbs: ["create", "get"]
---
# Role for creating cronjobs
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cronjob-creator
  namespace: default
rules:
- apiGroups: ["","batch"]
  resources: ["cronjobs"]
  verbs: ["create", "get"]
---
# Role for deleting all benchmark related resources
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: benchmark-janitor
rules:
- apiGroups: ["","batch", "kubeflow.org", "rbac.authorization.k8s.io"]
  resources: ["pods", "jobs", "cronjobs", "mpijobs", "configmaps","rolebindings", "services"]
  verbs: ["list", "delete"]
---
# Role for observing pod status and logs
# This permissions are required in order to grant pod-status role
# to the service account created for the MPI (Horovod) benchmark
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-status-observer
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods/log", "pods/status"]
  verbs: ["get"]
---
# Role for observing pod logs
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-log-observer
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
---
# Role for observing job status
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-status-observer
  namespace: default
rules:
- apiGroups: ["batch"]
  resources: ["jobs/status"]
  verbs: ["get"]
---
# Role for listing pods
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-lister
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
# TODO: Make this role a part of the deployment resources
# since the specific job and service can be targeted in the role
# thereby reducing its scope - this would also require the generation
# of a dynamic service account, though.
# Role for cleaning up an inference benchmark
# and its resources
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: inference-benchmark-janitor
rules:
  - apiGroups: ["","batch"]
    resources: ["jobs", "services"]
    verbs: ["list", "delete"]
