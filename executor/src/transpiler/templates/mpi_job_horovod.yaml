apiVersion: v1
kind: ConfigMap
metadata:
  name: entrypoint-{job_id}
  namespace: default
  labels:
    benchmark: {job_id}
data:
  entrypoint: echo "Entrypoint"
  init_entrypoint.sh: |-
    #!/bin/bash
    if [ "$ROLE" == "worker" ]; then
      /opt/behance/download-s3-files "$@"
    else
      echo "Not a worker - no data necessary"
    fi  
---

apiVersion: kubeflow.org/v1alpha1
kind: MPIJob
metadata:
  name: {job_id}
  labels:
    app: benchmark-ai
spec:
  replicas: {descriptor.num_instances}
  template:
    spec:
      serviceAccountName: metrics-pusher
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - benchmark-ai
            topologyKey: kubernetes.io/hostname
      initContainers:
      - name: data-puller
        command: 
        - /bin/init_entrypoint.sh
        volumeMounts:
        - name: entrypoint
          mountPath: /bin/init_entrypoint.sh
          readOnly: true
          subPath: init_entrypoint.sh
        env:
        - name: ROLE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['mpi_role_type']
      containers:
      - image: {descriptor.docker_image}
        name: benchmark
        command: 
        - /bin/entrypoint.sh
        volumeMounts:
        - name: entrypoint
          mountPath: /bin/entrypoint.sh
          readOnly: true
          subPath: entrypoint.sh
        - name: benchmark-ai
          mountPath: /tmp/benchmark-ai
        resources:
          limits:
            nvidia.com/gpu: {descriptor.gpus_per_instance}
        env:
        - name: BENCHMARK_AI
          value: "fifo"
        - name: BENCHMARK_AI_FIFO_FILEPATH
          value: "/tmp/benchmark-ai/fifo"
        - name: BENCHMARK_AI_FIFO_MAX_WAIT_TIME
          value: "60"
      - name: sidecar
        image: "edisongustavo/benchmarkai-metrics-pusher:0.1"
        env:
        - name: BENCHMARK_AI_FIFO_FILEPATH
          value: /tmp/benchmark-ai/fifo
        - name: BACKEND
          value: elasticsearch
        - name: BACKEND_ARG_JOB_ID
          value: {job_id}
        - name: BACKEND_ARG_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: outputs-infrastructure
              key: es_endpoint
        - name: BACKEND_ARG_PORT
          value: "443"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /tmp/benchmark-ai
          name: benchmark-ai
      volumes:
      - name: entrypoint
        configMap:
          defaultMode: 0700
          name: entrypoint-{job_id}
      - name: benchmark-ai
        emptyDir: {{}}
      nodeSelector:
        beta.kubernetes.io/instance-type: {descriptor.instance_type}
        node.type: bai-worker
        failure-domain.beta.kubernetes.io/zone: {availability_zone}
