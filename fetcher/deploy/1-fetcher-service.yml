apiVersion: v1
kind: Service
metadata:
  name: fetcher-dispatcher
  labels:
    app: benchmark-ai
spec:
  clusterIP: None
  selector:
    app: benchmark-ai

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fetcher-dispatcher
spec:
  selector:
    matchLabels:
      app: benchmark-ai # has to match .spec.template.metadata.labels
  serviceName: "fetcher-dispatcher"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: benchmark-ai
    spec:
      serviceAccountName: fetcher-dispatcher
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - benchmark-ai
              topologyKey: kubernetes.io/hostname
      containers:
        - name: fetcher-dispatcher
          image: stsukrov/fetcher-dispatcher
          env:
            - name: FETCHER_JOB_IMAGE
              value: stsukrov/datafetcher
            - name: S3_DATASET_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: outputs-infrastructure
                  key: data_pull_s3
            - name: ZOOKEEPER_ENSEMBLE_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: zookeeper
                  key: connect
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "172.16.41.67:9092,172.16.26.27:9092,172.16.14.47:9092"
            - name: CONSUMER_TOPIC
              value: benchmark_control
            - name: PRODUCER_TOPIC
              value: benchmark_control
            - name: LOGGING_LEVEL
              value: INFO
      nodeSelector:
        node.type: bai-services-cheap
      restartPolicy: Always
